<html>

<head>
    <title>home</title>
    <style>
        body {
            font-family: Arial, Helvetica, sans-serif;
        }

        * {
            box-sizing: border-box
        }

        /* Full-width input fields */
        input {
            width: 100%;
            padding: 15px;
            margin: 5px 0 22px 0;
            display: inline-block;
            border: none;
            background: #f1f1f1;
        }

        input:focus {
            background-color: #ddd;
            outline: none;
        }

        hr {
            border: 1px solid #f1f1f1;
            margin-bottom: 25px;
        }

        button:hover {
            opacity: 0.7;
        }

        /* Add padding to container elements */
        .container {
            width: 400px;
            padding: 16px;
        }

        .submit {
            background-color: rgb(6, 207, 6);
            color: white;
            margin: 8px 0;
            cursor: pointer;
            width: 100%;
            font-size: 25px;
        }

        /* Clear floats */
        .clearfix::after {
            content: "";
            clear: both;
            display: table;
        }

        form {
            text-align: -webkit-center;
        }

        /* Change styles for cancel button and signup button on extra small screens */
        @media screen and (max-width: 300px) {
            .signupbtn {
                width: 100%;
            }
        }

        .header {
            display: flex;
            align-items: center;
            height: 30px;
            float: right;
        }

        .head {
            border-bottom: 2px solid black;
            height: 35px;
        }

        .logout {
            background-color: rgb(218, 21, 21);
            color: white;
            border: none;
            margin-left: 10px;
            font-size: 17px;
        }

        .form {
            border-bottom: 1px solid gray;
        }

        .commentContainer {
            width: 100%;
            padding: 16px;
            word-break: break-word;
        }

        .commentWrapper {
            width: 60%;
            margin: auto;
        }

        .rightFloat {
            float: right;
        }

        .leftFloat {
            float: left;
        }

        .commentButton {
            background-color: blue;
            color: white;
            border: none;
            margin-left: 10px;
            font-size: 17px;
        }

        .commentButtonDisable{
            background-color: red;
            color: white;
            border: none;
            margin-left: 10px;
            font-size: 17px;
            cursor: not-allowed;
        }
    </style>
</head>

<body>
    <div class="head">
        <div class="header">
            <h6>{{result.name}}</h6>
            <a href="/user/logout"><button type="button" class="logout">Logout</button></a>
        </div>
    </div>

    <div class="wrapper">
        <form class="form">
            <div class="container">
                <label for="comment"><b>Enter Comment</b></label>
                <textarea id="commentInput" type="text" placeholder="Enter Comments" rows="5" cols="43" name="email"
                    required></textarea>
                <button type="button" class="submit" onclick="submitForm()">submit</button>
            </div>
        </form>
    </div>

    <div id="commentWrapper" class="commentWrapper">
    </div>

    <script>
        (function () {
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    //console.log(this.responseText);
                    let result = JSON.parse(this.responseText);

                    let commentsHTML = '';
                    console.log(result.status);
                    if (result.status) {
                        result.result.map(function (comment) {
                            //console.log(comment.replyCount[0]["COUNT(id)"]);
                            commentsHTML += `<div class="commentContainer">
            <h4>${comment.userName}</h4>
            <div>
                <p>${comment.text}</p> </div> <div>`
                if(comment.replyCount[0]["COUNT(id)"]==0){
                    commentsHTML +=`<div class="leftFloat">
                    <button class="commentButtonDisable" disabled>View Reply(${comment.replyCount[0]["COUNT(id)"]})</button>
                </div>`
                }
                else{
                    commentsHTML +=`<div class="leftFloat">
                    <button class="commentButton">View Reply(${comment.replyCount[0]["COUNT(id)"]})</button>
                </div>`
                }
                if(comment.userName != '{{result.name}}'){
                    console.log("got");
                    commentsHTML +=`<div class="rightFloat">
                    <button class="commentButton" onClick="replyComment(${comment.id},'${comment.userName}')">Reply</button>
                    <button class="commentButtonDisable" disabled onClick="editComment(${comment.id},'${comment.text}')">Edit</button>
                </div>
            </div>
        </div>`
                }
                else{
                    console.log("noooooooooooogot");
                    commentsHTML +=`<div class="rightFloat">
                    <button class="commentButton" onClick="replyComment(${comment.id},'${comment.userName}')">Reply</button>
                    <button class="commentButton" onClick="editComment(${comment.id},'${comment.text}')">Edit</button>
                </div>
            </div>
        </div>`
                }
            
                
                
                        });
                        document.getElementById("commentWrapper").innerHTML = commentsHTML;
                    }
                    else {
                        console.log("something went wrong");
                    }
                }
            };
            xhttp.open("GET", "/comment/all", true);
            xhttp.send();
        })();

        function submitForm() {
            event.preventDefault();

            let text = document.getElementById("commentInput").value;
            let id = `{{result.id}}`;

            console.log(text + "             " + id);

            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    //console.log(this.responseText);
                    let result = JSON.parse(this.responseText);
                    //console.log(typeof result.status);
                    if (result.status == true) {
                        alert("Comment Successfully Submitted");
                        location.reload();
                    }
                    else {
                        alert("Something went wrong");
                    }
                }
            };
            xhttp.open("POST", "/comment/create", true);
            xhttp.setRequestHeader("Content-type", "application/json");
            xhttp.send(JSON.stringify({ "text": text, "id": id }));
        }

        function editComment(id, text) {
            event.preventDefault();

            let edit_text = prompt("Edit your Comment", text);

            console.log(edit_text + "             " + id);

            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    //console.log(this.responseText);
                    let result = JSON.parse(this.responseText);
                    //console.log(typeof result.status);
                    if (result.status == true) {
                        alert("Comment Successfully Edited");
                        location.reload();
                    }
                    else {
                        alert("Something went wrong");
                    }
                }
            };
            xhttp.open("PUT", "/comment/edit", true);
            xhttp.setRequestHeader("Content-type", "application/json");
            xhttp.send(JSON.stringify({ "text": edit_text, "id": id }));
        }

        function replyComment(comment_id, name) {
            event.preventDefault();

            let reply_text = prompt("Reply");

            console.log(reply_text + "             " + comment_id + "            " + name);

            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    //console.log(this.responseText);
                    let result = JSON.parse(this.responseText);
                    //console.log(typeof result.status);
                    if (result.status == true) {
                        alert("Reply Successfully Submitted");
                        location.reload();
                    }
                    else {
                        alert("Something went wrong");
                    }
                }
            };
            xhttp.open("POST", "/comment/reply", true);
            xhttp.setRequestHeader("Content-type", "application/json");
            xhttp.send(JSON.stringify({ "text": reply_text, "id": comment_id, "name": name }));
        }
    </script>
</body>

</html>